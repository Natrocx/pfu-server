package de.dhbw_mannheim.pfu_server.restservice;

import de.dhbw_mannheim.pfu_server.sql.entities.Message;
import de.dhbw_mannheim.pfu_server.sql.entities.MessageContent;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import de.dhbw_mannheim.pfu_server.sql.entities.User;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private User userRepository;

    @PostMapping(path="/user/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String Firstname, @RequestParam String lastname
            , @RequestParam String email,  @RequestParam String passwort) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setFirst_name(Firstname);
        n.setLast_name(lastname);
        n.setEmail(email);
        n.setPassword_encrypted(passwort);
        return "Saved";
    }

    @PostMapping(path="/message/send") // Map ONLY POST Requests
    public @ResponseBody String addMessage (@RequestParam String message) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        MessageContent n = new MessageContent();
        n.setContent(message);
        return "sent";
    }

    @PatchMapping (path="/user/update") // Map ONLY POST Requests
    public @ResponseBody String updateProfile (@RequestParam String Firstname, @RequestParam String lastname
            , @RequestParam String email, @RequestParam String passwort ) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        //body

        return "succesfully updated";
    }

    @GetMapping(path="/message/recieve")
    public @ResponseBody String getNewMessage(Integer messageId ) {
        // This returns a JSON or XML with the users

        //body

        return "refreshed";
    }

    @GetMapping(path="/info/dozent")
    public @ResponseBody String getDozentInfo() {
        // This returns a JSON or XML with the users

        //body

        return "dozent info";
    }

    @GetMapping(path="/info/hochschule")
    public @ResponseBody String getHochschuleInfo() {
        // This returns a JSON or XML with the users

        //body

        return "Hochschule info";
    }

    @GetMapping(path="/info/student")
    public @ResponseBody String getStudentInfo() {
        // This returns a JSON or XML with the users

        //body

        return "Student info";
    }

    @DeleteMapping(path="/user/delete")
    public @ResponseBody String deleteUser() {
        // This returns a JSON or XML with the users

        //body

        return "succesfully deleted";
    }

}
